// TODO: what is happening with the riders' positioning at the course gradient boundaries?
// TODO: don't have runToTarget call itself (kind of an infinite recursion thing going on)
// TODO: how to move up in the peloton to control its speed?
// TODO: test to see what happens when riders can't get onto the paceline
// TODO: use physics to determine rider side-to-side positioning [p2.js or custom collision code for x-axis only]
// TODO: Group leader-of-the-moment can set the group's tempo
// TODO: in-game breakaway calculator
// TODO: power is reduced, via easing function, when energy is below 20% (and player avatar starts sweating)
// TODO: UI for "attack", "join group", "protect rider", "sprint", "sprint joystick", "[fun] power setting"
// TODO: UI elements for: leading group distance to finish, gaps to other groups
// TODO: way to show gradient in top view (shaded roads?)
// TODO: top view option: show entire race
// TODO: top view: curved path for course (showing whole bounds?)
// TODO: real world: mountain time trial
// TODO: rethink redzone and fatigue: maybe energy can go negative; it just reduces your power (ie, no "redzone" counter) [based on negative fuel percentage and base power?]
// TODO: average speed from last time interval for smoothing?
// TODO: check flat stage time trial (from last year's TdF) for Sprinter and Climber times (to check power curves)
// TODO: drafting only works above a specific speed?
// TODO: numbers in breakaway increase advantage? [this seems to happen naturally; double-check!]
// TODO: sprinter may use too much energy at 1600 watts
// TODO: burst energy vs. overall energy? [like the Cycling game]
// TODO: crashing on curves
// TODO: team with most riders "pulling" in a group get to control it (ie, set its pace)
// TODO: rider modeling/visualizer
// TODO: add a debug rider UI to the test engine
// TODO: time trials!
// TODO: helicopter view with current, live standings
// TODO: cleanup (ie, garbage collect) views and easel.js trappings? (not a priority)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

IDEAS:

course is measured in kilometers
time is measured in seconds

max power * effort = desired power
fatigue (fuel remaining) affects power output
acceleration determines how fast your power ramps up

once you're out of fuel, your power drops to the "recover rate" level

sprinters vs. climbers?
sprinter = high max power, slow recovery
climber = lower max power, higher recovery
tt = high-ish max power, good recovery

overnight recovery?

SCENARIOS:

flat time trial: for TT victors
sprint finish
straight climb
rolling course

"To win the Tour de France you need to be able to hold 5.9 to 6.0 watts per kg for 30 to 45 minutes at a time, 3 to 4 times over the course of a 5 to 6 hour day in the mountains." -- cyclingtips.com

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// DONE: calculate more precise finishing time (ie, not rounded to 10 seconds)
// DONE: power curves for each rider
// DONE: climbing ability versus flat ability
// DONE: distance from power
// DONE: descending speed accurate? [seems close]
// DONE: downhill shouldn't use as much energy [works as part of the standard power equation; just don't set effort to 0]
// DONE: rolling course tests
// DONE: slowing down, not stopping immediately, when out of energy [averages last speed]
// DONE: sprinting power may need to be re-thought since the step size is 10 seconds (that's too long to be considered "accelerating" to 1600 watts if that only lasts 2 seconds) [1 second intervals now]
// DONE: come up with a starting fuel tank number [based on FTP minus recovery rate]
// DONE: implement and test descending ability
// DONE: negative energy is slower to recover
// DONE: bonk recovery
// DONE: group tests
// DONE: need group power or speed setting (varies per leader!)
// DONE: fatigue? bonking penalty? [negative fuel = slow to recover; fatigue can be reduced power below 20%]
// DONE: riders try to stay in groups by maintaining the same distance/speed [ie, power is different per rider; drafting comes later]
// DONE: refactor step flow so groups process first (as one) and then individuals?
// DONE: ability to "speed up" and "slow down" to maintain desired speed per update? similar to trying to ride with another rider for protection, etc.?
// DONE: determine if I should be averaging speed from one step to the next or not [I turned it off; we'll have to see if animation proves it out]
// DONE: group needs a better "effort" setting [leader "power" setting]
// NOTE: 15-30% grade in Stage 3 of 2016 Vuelta, 1.8km, 6:30 minutes [test in place]
// DONE: graph the power curves to make sure they look right
// DONE: get rid of maxPower [replace with top-end of power curve]
// DONE: use animation library
// DONE: put rider's first initial in circle
// DONE: RaceManager: return finishing order
// DONE: have an option to not show/update UI every frame (to speed up testing)
// DONE: get rid of rider.gui
// DONE: zoom level and centering for top-view [primitive at least]
// DONE: show fuel % in top-view
// DONE: something weird is happening at 10km in the "lumpy" stage [speeding up / slowing down between groups on slope; it just looked extreme but wasn't really]
// DONE: how to do time-checks? [time markers]
// DONE: view options as objects, not separate functions
// DONE: try to make tests use visuals or not with a simple flag
// DONE: group @ 340 watts should go the same speed as solo @ 340 watts [or should it? I don't think so: dropping back eases the speed; otherwise it would be > 340 to lead so it's one or the other]
// DONE: click to toggle pause
// DONE: centering topview isn't quite right
// DONE: sprinter/tt group dynamics not working to keep one in front of the other [minimum wattage was too high; and math mistake in power lookup]
// DONE: group doesn't stay together when going even slightly uphill
// DONE: change power curve to more straightforward duration interpolation at intervals (2s, 5s, 60s, 5m, 20m, 45m, 6hrs)
// DONE: slow acceleration is the main cause of distance errors in pacelines; maybe trying not to move too quickly will help? [using a circular rotation pattern helped immensely]
// NOTE: increasing the "timeInFront" helps the group become more efficient
// DONE: come up with more energy-efficient paceline logic [while still maintaining test results] [circular pattern did the trick]
// DONE: cycling shouldn't send leader to the back right away (wastes too much energy getting into position again) [again, circular!]
// DONE: animating the group dynamics might help problem solving
// DONE: groups with non-cooperative riders [go in back]
// DONE: groups with riders pulling for longer turns? [rider.options.timeInFrontPercent = 200, etc.]
// DONE: tests for coop/non-coop groups
// DONE: groups with a dedicated leader pulling (ie, non-switching) [sort of works right now]
// DONE: tests for groups of other sizes
// DONE: getGroupLeader formula might not be right for groups of other sizes
// DONE: Peloton = special form of group (with no pace line cycling) with most riders at the front [how to determine] setting the speed
// DONE: riders getting dropped from groups [after falling 10m behind last rider]
// DONE: test of non-drafting speed
// DONE: drafting only works above a set speed
